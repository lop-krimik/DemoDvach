version: "2.29.1"

networks:
  app-network:
    driver: bridge

services:
  postgres_db:
    container_name: postgres_db
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 20s
      timeout: 5s
      retries: 10
    restart: no
    networks:
      - app-network

  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network

  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:3.4
    ports:
      - 9092:9092
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      - app-network

  user-service:
    container_name: user-service
    build: ./user-service/.
    ports:
      - 8082:8082
    environment:
      DB_URL: jdbc:postgresql://postgres_db:5432/postgres_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      KAFKA_SERVER: kafka:9092
    depends_on:
      postgres_db:
        condition: service_healthy
      kafka:
        condition: service_started
    restart: no
    networks:
      - app-network

  paste-service:
    container_name: paste-service
    build: ./paste-service/.
    ports:
      - 8084:8084
    environment:
      DB_URL: jdbc:postgresql://postgres_db:5432/postgres_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      KAFKA_SERVER: kafka:9092
    depends_on:
      postgres_db:
        condition: service_healthy
      kafka:
        condition: service_started
    restart: no
    networks:
      - app-network

  notification-service:
    container_name: notification-service
    build: ./notification-service/.
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_SERVER: kafka:9092
      EMAIL_USERNAME: # Your email adress
      EMAIL_PASSWORD: # Your app password
    restart: no
    networks:
      - app-network

volumes:
  postgres_data:
  zookeeper_data:
  kafka_data: